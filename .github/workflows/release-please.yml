name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: fullstack-pb-template
          bump-minor-pre-major: true
          bump-patch-for-minor-pre-major: true
          include-v-in-tag: true
          changelog-types: '[{"type":"feat","section":"Features","hidden":false},{"type":"fix","section":"Bug Fixes","hidden":false},{"type":"chore","section":"Miscellaneous","hidden":false},{"type":"docs","section":"Documentation","hidden":false},{"type":"refactor","section":"Code Refactoring","hidden":false}]'

  # This job runs only if a release was created by release-please
  build-and-publish-release:
    needs: release-please
    if: ${{ needs.release-please.outputs.release_created }}
    runs-on: ubuntu-latest
    steps:
      # 1) Check out the code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2) Install Node 22 and enable Yarn caching
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: yarn

      # 3) Install dependencies (immutable = locked versions, no updates)
      - name: Install Dependencies
        run: |
          yarn install --immutable

      # 4) Build all packages (topological if your scripts call 'yarn workspaces foreach')
      - name: Build Monorepo
        run: |
          yarn build

      # 5) Run Tests
      - name: Run Tests
        run: |
          yarn test

      # 7) Docker build & push steps
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Generate nightly tag
        run: |
          TAG_NAME=${{ needs.release-please.outputs.tag_name }}
          VERSION=${TAG_NAME#v}
          echo "VERSION=${VERSION}" >> $GITHUB_ENV
          echo "TAGS=dastro/fullstack-pb-template:${VERSION},dastro/fullstack-pb-template:latest" >> $GITHUB_ENV

      # 8) Build & push the Docker image with GHA caching for layers
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          push: true
          cache-from: type=gha,scope=fullstack-latest-cache
          cache-to: type=gha,mode=max,scope=fullstack-latest-cache
          tags: ${{ env.TAGS }}
          build-args: |
            VERSION=${{ env.VERSION }}